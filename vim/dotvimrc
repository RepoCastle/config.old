
let mapleader="," 

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Bundle 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1
autocmd BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn} map <Leader>pv :!google-chrome "%:p"<CR>


" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
""nmap <leader>t :CommandT<cr> 
""nmap <leader>b :CommandTBuffer<CR>
"map <C-p> :CommandT<CR>
"set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.tar.gz,*.tgz,*.gz,*.bz2,*.tar.bz2,*.tar,*.7z,*.deb,*.class,*.jar,*/workspace/spark/*target/*,*/.git/*


Bundle "kien/ctrlp.vim"
let g:ctrlp_map = '<C-p>'
let g:ctrlp_max_files = 0
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.tar.gz,*.tgz,*.gz,*.bz2,*.tar.bz2,*.tar,*.7z,*.deb,*.class,*.jar,*/workspace/spark/*target/*,*/.git/*
"let g:ctrlp_custom_ignore = {
"  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
"  \ 'file': '\v\.(exe|so|dll)$',
"  \ 'link': 'some_bad_symbolic_links',
"  \ }

Bundle 'flazz/vim-colorschemes'
set t_Co=256

Bundle "tpope/vim-surround"

"Bundle "Yggdroot/indentLine"
"let g:indentLine_color_term = 248
"let g:indentLine_color_gui = '#A4E57E'
"let g:indentLine_color_tty_light = 7
"let g:indentLine_char = '│'

Bundle 'Lokaltog/vim-easymotion'

"Bundle 'altercation/vim-colors-solarized'
"if has('gui_running')
"  set background=light
"else
"  set background=dark
"endif
"colorscheme solarized

Bundle "bling/vim-airline"
"let g:airline_section_b = '%{strftime("%c")}'
"let g:airline_section_y = 'BN: %{bufnr("%")}'
"let g:airline#extensions#tabline#enabled = 1
set laststatus=2
"let g:airline_left_sep = ''
"let g:airline_right_sep = ''

Bundle "scrooloose/syntastic"
let g:syntastic_check_on_open = 1

Bundle "scrooloose/nerdtree"
" NERDTree config
map <F2> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") &&b:NERDTreeType == "primary") | q | endif

" Bundle 'taglist.vim'
"autocmd VimEnter * TlistToggle "启动时强制打开taglist窗口
" let Tlist_Show_One_File=1 "一次只显示一个文件的tag，默认会显示所有打开过的
" let Tlist_Use_Right_Window=1 "将taglist窗口放到右边，因为左边放了NERDTree，所以这条很有用！
" let Tlist_Compact_Format=1 "紧凑显示，在有限的窗口里可以多显示几行内容

Bundle 'SirVer/ultisnips'
" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'
" " Trigger configuration. Do not use <tab> if you use
" https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

Plugin 'LaTeX-Suite-aka-Vim-LaTeX'
Plugin 'Align'
Plugin 'Vim-R-plugin'

Bundle 'tpope/vim-rails'

" Bundle 'Valloric/YouCompleteMe'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
" filetype plugin on


set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1

syntax enable "语法高亮
set nu "显示行号
set ruler "在右下角显示光标的坐标
set hlsearch "高亮显示搜索结果
set incsearch "边输边搜，即时反馈搜索结果，这个可能看个人喜好
set showcmd "在ruler左边显示当前正在输入的命令，提示性的，避免误操作
set expandtab "将tab键改为空格，默认是8个
set tabstop=2 "将tab键改为4个空格
set cindent "使用C语言的规则自动缩进，当你敲回车时会自动缩进，所有类C语言（PHP，JAVA）都试用，比smartindent更智能
set shiftwidth=2 "自动缩进时，使用4个空格，默认是8个

set pastetoggle=<F10>

set background=dark
"colorscheme molokai
colorscheme desert
"colorscheme solarized

